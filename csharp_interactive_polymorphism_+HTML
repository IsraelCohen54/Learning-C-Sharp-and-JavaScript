/*The example code contains a C# program that implements polymorphism and event handling.
The code includes an interface called "IPerson" and two classes, "Student" and "Teacher",
which both implement the IPerson interface.
The Student class contains information such as student name,
year in university, and grades in different courses,
while the Teacher class contains information such as teacher name, number of courses taught,
and an event handler.
The code also includes an array of 3 students, 2 in the first year and 1 in the second year, and an array of 2 teachers.
The program demonstrates how to use the event handler by triggering a custom event for each teacher,
which in turn prints the data of the teacher..*/
<html>
  <head>
    <title>C# Event Example</title>
  </head>
  <body>
    <h1>C# Event Example</h1>
    <form id="form1">
      <div>
        <h2>Students Information</h2>
        <table id="studentInformation">
          <thead>
            <tr>
              <th>Name</th>
              <th>Year in University</th>
              <th>Grades</th>
              <th>Average Grade</th>
            </tr>
          </thead>
          <tbody id="studentInformationBody"></tbody>
        </table>
      </div>
      <br />
      <div>
        <h2>Teachers Information</h2>
        <table id="teacherInformation">
          <thead>
            <tr>
              <th>Name</th>
              <th>Number of Courses</th>
            </tr>
          </thead>
          <tbody id="teacherInformationBody"></tbody>
        </table>
      </div>
      <br />
      <input type="button" id="btnUpdateGrades" value="Update Grades" />
    </form>
  </body>
  <script>
    interface IPerson
    {
      string Name { get; set; }
      event EventHandler DataChanged;
    }

    class Student : IPerson
    {
      public string Name { get; set; }
      public int YearInUniversity { get; set; }
      public int[] Grades { get; set; }
      public double AverageGrade { get; set; }
      public event EventHandler DataChanged;

      public Student(string name, int yearInUniversity, int[] grades)
      {
        this.Name = name;
        this.YearInUniversity = yearInUniversity;
        this.Grades = grades;
        this.AverageGrade = grades.Average();
      }

      public void UpdateGrades(int[] grades)
      {
        this.Grades = grades;
        this.AverageGrade = grades.Average();
        this.DataChanged?.Invoke(this, EventArgs.Empty);
      }
    }

    class Teacher : IPerson
    {
      public string Name { get; set; }
      public int NumberOfCourses { get; set; }
      public event EventHandler DataChanged;

      public Teacher(string name, int numberOfCourses)
      {
        this.Name = name;
        this.NumberOfCourses = numberOfCourses;
      }

      public void UpdateNumberOfCourses(int numberOfCourses)
      {
        this.NumberOfCourses = numberOfCourses;
        this.DataChanged?.Invoke(this, EventArgs.Empty);
      }
    }

    IPerson[] people = new IPerson[]
    {
        new Student("Jim Brown", 2, new int[] { 90, 95, 90 }),
        new Student("Jane Doe", 1, new int[] { 85, 90, 95 }),
        new Student("John Doe", 1, new int[] { 95, 85, 80 })
};

// Create an array of teachers
Teacher[] teachers = new Teacher[]
{
  new Teacher("Dr. Smith", 3),
  new Teacher("Dr. Johnson", 2)
};

// Attach the OnDataChanged event to each student
foreach (var student in students)
{
  student.OnDataChanged += Student_OnDataChanged;
}

// Attach the OnDataChanged event to each teacher
foreach (var teacher in teachers)
{
  teacher.OnDataChanged += Teacher_OnDataChanged;
}

// Trigger the custom event for each student
foreach (var student in students)
{
  student.TriggerDataChanged();
}

// Trigger the custom event for each teacher
foreach (var teacher in teachers)
{
  teacher.TriggerDataChanged();
}

// Create a button and attach the click event handler
HtmlButton clickToWriteNameButton = new HtmlButton();
clickToWriteNameButton.InnerText = "Write Names";
clickToWriteNameButton.AddEventListener("click", OnClickHandler);

// Add the button to the HTML body
document.Body.AppendChild(clickToWriteNameButton);

private static void OnClickHandler(object sender, HtmlEventArgs e)
{
  // Create a table and render the student data
  Table table = new Table("studentsNamesTable", "tableBodyId", students);
  table.Render();
}

</script>
</head>
<body>
  <!-- Table for displaying student data -->
  <table id="studentsNamesTable">
    <thead>
      <tr>
        <th>Name</th>
        <th>Year</th>
        <th>Grades</th>
        <th>Average</th>
      </tr>
    </thead>
    <tbody id="tableBodyId">
    </tbody>
  </table>
</body>
</html>
